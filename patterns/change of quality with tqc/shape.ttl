@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ex:    <http://www.example.org/#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix obi:   <http://purl.obolibrary.org/obo/> .
@prefix pmdco: <https://w3id.org/pmd/co/> .
@prefix shape:   <https://w3id.org/pmd/co/shapes> .


shape:independent_continuant_anchor
    a sh:NodeShape ;
    sh:targetClass obi:BFO_0000004 ; # independent continuant
    sh:property
    [
        sh:path obi:RO_0000086 ; # has quality
        # sh:class obi:BFO_0000019 ; # quality
        sh:severity sh:Violation ;
        sh:message "The quality instance of an anchor is not a subclass of Quality" ;
        sh:sparql 
        [
            a sh:SPARQLConstraint ;
            sh:select """
                PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#> 
                PREFIX obi:   <http://purl.obolibrary.org/obo/> 
                SELECT ?icQualityClass
                WHERE { FILTER NOT EXISTS { ?icQualityClass rdfs:subClassOf+ obi:BFO_0000019 } }""" ;
        ]
    ] ;

    # WHERE { FILTER NOT EXISTS { ?someClassUri rdfs:subClassOf ?anchorQualityClass } }""" ;

    sh:property  
    [
        sh:path pmdco:PMD_0000069 ; # has state
        sh:node shape:temporally_qualified_continuant ;
    ] ;

    sh:severity sh:Violation ;
    sh:message "An Independent Continuant and its Temporally Qualified Continuant cannot both possess qualities of the same rdf:type (class)." ;
    sh:sparql 
    [
        a sh:SPARQLConstraint ;
        sh:select """
        PREFIX pmdco: <https://w3id.org/pmd/co/> 
        PREFIX obi:   <http://purl.obolibrary.org/obo/> 
        PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#> 

        SELECT DISTINCT $ic ?tqc ?anchorQualityClass ?temporalQualityClass
        WHERE {
            # STEP 1. IC has state TQC --> finding the TQC
            ?ic pmdco:PMD_0000069 ?tqc . 
            
            # STEP 2. IC has quality Quality --> finding IC's quality and checking its type/class
            ?ic obi:RO_0000086 ?icQuality .
            ?icQuality a ?anchorQualityClass .
            FILTER NOT EXISTS { ?someAnchorChildClass rdfs:subClassOf ?anchorQualityClass .
                                ?icQuality a ?someAnchorChildClass } .

            
            # STEP 3. TQC has quality Quality --> finding TQC's quality and checking its type/class
            ?tqc obi:RO_0000086 ?tqcQuality . 
            ?tqcQuality a ?temporalQualityClass .
            FILTER  NOT EXISTS { ?someTempChildClass rdfs:subClassOf ?temporalQualityClass .
                                ?tqcQuality a ?someTempChildClass } .
            
            # Ensure that the lowest classes of tqcQuality and icQuality are not the same
            FILTER (?anchorQualityClass = ?temporalQualityClass)
        }
        """ ;
    ] ;
    

    sh:closed false ;
    sh:ignoredProperties ( rdf:type owl:topDataProperty owl:topObjectProperty ) .

shape:temporally_qualified_continuant
    a sh:NodeShape ;
    sh:targetClass pmdco:PMD_0000068 ; # temporally qualified continuant
    sh:property
    [
        sh:path obi:BFO_0000108 ; # exists at
        sh:class obi:BFO_0000008 ; # temporal region
        sh:minCount 1 ;  
    ] ;
    sh:property
    [
        sh:path obi:RO_0000086 ; # has quality
        # sh:class obi:BFO_0000019 ; # quality
        sh:severity sh:Violation ;
        sh:message "The quality instance of an TQC is not a subclass of Quality" ;        
        sh:sparql 
        [
            a sh:SPARQLConstraint ;
            sh:select """
                PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#> 
                PREFIX obi:   <http://purl.obolibrary.org/obo/> 
                SELECT ?tqcQualityClass
                WHERE { FILTER NOT EXISTS { ?tqcQualityClass rdfs:subClassOf+ obi:BFO_0000019 } }""" ;
        ]
    ] ;

    sh:closed false ;
    sh:ignoredProperties ( rdf:type owl:topDataProperty owl:topObjectProperty ) .

shape:manufacturing_process
    a sh:NodeShape ;
    sh:targetClass  pmdco:PMD_0000833 ;   # Manufacturing process
    sh:property [            
        sh:path obi:RO_0002233 ; # has input
        sh:node shape:temporally_qualified_continuant ;
        sh:minCount 1 ;
    ] ;
    sh:property [            
        sh:path obi:RO_0002234 ; # has  output
        sh:node shape:temporally_qualified_continuant ;
        sh:minCount 1 ;
    ] ;
    sh:property
    [
        sh:path obi:BFO_0000108 ; # exists at
        sh:class obi:BFO_0000008 ; # temporal region
        sh:minCount 1 ;  
    ] ;
   
   # sh:closed false ;
   sh:ignoredProperties ( rdf:type owl:topDataProperty owl:topObjectProperty ) .

